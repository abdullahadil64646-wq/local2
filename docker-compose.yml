version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: saas-local-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-change_me_in_production}
      MONGO_INITDB_DATABASE: saas-local-stores
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - saas-local-network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    container_name: saas-local-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - saas-local-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saas-local-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-change_me_in_production}@mongodb:27017/saas-local-stores?authSource=admin
      REDIS_URL: redis://redis:6379
      PORT: 5000
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-for-development}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-jwt-refresh-secret-for-development}
      DEFAULT_TIMEZONE: Asia/Karachi
      DEFAULT_CURRENCY: PKR
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - saas-local-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: saas-local-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
      REACT_APP_ENVIRONMENT: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - saas-local-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: saas-local-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - saas-local-network

  # Background Job Processor
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saas-local-worker
    restart: unless-stopped
    command: npm run worker
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-change_me_in_production}@mongodb:27017/saas-local-stores?authSource=admin
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - saas-local-network

volumes:
  mongodb_data:
  redis_data:

networks:
  saas-local-network:
    driver: bridge